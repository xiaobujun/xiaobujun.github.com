<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计算机语言</title>
    <link href="/2022/03/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"/>
    <url>/2022/03/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>人与人之间的交流工具是语言。不同国家、民族、地区衍生出了不同的语系，虽然英语和汉语两者听起来有很大差别，但是它们都具备三个基本要素：词汇、语法、语调，只是不同语言之间这三要素的规则不尽相同。现如今计算机产业飞速发展，软件产业兴旺发达，你是否想过，计算机是如何明白人类对它发出的指令？人与计算机之间是如何完成通信？实际上，人与计算机通信也是通过一种特定的语言——计算机语言。</p><h2 id="计算机语言"><a href="#计算机语言" class="headerlink" title="计算机语言"></a>计算机语言</h2><p>什么是计算机语言？像我们平常所了解的汉语，它的词汇是各种各样的汉字，语法既是主谓宾定壮补之间的规则。同样的，计算机语言也有相似规则，有特定的词汇（专业术语称为”关键字“）和特定的语法。另外就像人类之间交流的语言有汉语、英语等，人和计算机通信也可以使用不同的计算机语言，且不同的计算机语言语法是不尽相同的。从大的方面来讲，它主要分为以下三种。</p><h3 id="1-机器语言"><a href="#1-机器语言" class="headerlink" title="1.机器语言"></a>1.机器语言</h3><p><strong>计算机能直接识别的语言，由0和1构成的二进制代码。</strong>这是最底层的语言，但注意不同的计算机都有各自的机器语言，即指令系统。</p><h3 id="2-汇编语言"><a href="#2-汇编语言" class="headerlink" title="2.汇编语言"></a>2.汇编语言</h3><p>用一堆的0和1来组成的指令来控制计算机是一件很令人头疼的事，于是人们为了简化通常被应用在底层，硬件操作和高要求的程序优化的场合。驱动程序、<a href="https://baike.baidu.com/item/%E5%B5%8C%E5%85%A5%E5%BC%8F/575465">嵌入式</a>操作系统和实时运行程序都需要汇编语言。它使用一些容易理解和记忆的缩写单词（即”助记符“）来代替一些特定的指令，例如：用”ADD”代表加法操作指令，”SUB”代表减法操作指令。在不同的设备中，汇编语言同样对应着不同的机器语言指令集。</p><h3 id="3-高级语言"><a href="#3-高级语言" class="headerlink" title="3.高级语言"></a>3.高级语言</h3><p>和当前的人类语言近似，更加通俗易懂。当代大部分程序员都是使用高级语言来进行编程，当然，高级语言和汇编语言同样也不能被计算机读懂，</p><figure class="highlight c"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 库文件</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-comment">// main主函数</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-comment">// 打印HelloWorld</span><br>    print(<span class="hljs-string">&quot;HelloWorld!&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>科普</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机语言</tag>
      
      <tag>后端</tag>
      
      <tag>Java</tag>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人博客搭建记录</title>
    <link href="/2022/02/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/02/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>随着自媒体的兴起，人人都能在互联网的浪潮中激起朵朵浪花。我们能通过各种各样方式比如微博、朋友圈等社交软件；抖音、B站等短视屏平台来展现自己。那么我们能不能制作一个属于自己的独一无二的东西？我觉得拥有一个个人博客，就是一件非常酷的事情。</p><p>搭建一个个人博客？听起来像是一件很麻烦的事情。确实，如果你是通过常规的HTML+CSS+Javascript来创建一个博客，那就需要提前储备一定的知识。好消息是，现如今随着博客框架技术的发展，你可以在短短的15分钟内搭建好一个属于自己的个人博客。</p><p>那么接下来，我将一步一步手把手的教大家如何利用Hexo框架去搭建一个属于自己的个人博客。 </p><h1 id="前置环境配置"><a href="#前置环境配置" class="headerlink" title="前置环境配置"></a>前置环境配置</h1><ul><li><p>Git(我们的网站将托管在Github上面，域名来自Github托管页面的镜像)</p></li><li><p>Node.js(附带npm，用来安装Hexo本地环境)</p><h2 id="一、配置Git和创建Github账号"><a href="#一、配置Git和创建Github账号" class="headerlink" title="一、配置Git和创建Github账号"></a>一、配置Git和创建Github账号</h2><p>Git下载地址：<a href="https://git-scm.com/download/win">Git - Downloading Package (git-scm.com)</a></p><ol><li>选择红框内的版本进行下载<img src="C:\Users\小布菌\AppData\Roaming\Typora\typora-user-images\image-20220215164733336.png" alt="image-20220215164733336"></li><li>解压安装检测配置是否安装成功(详细见视频，也可以参考下方链接教程)<ul><li><a href="https://blog.csdn.net/mukes/article/details/115693833">Git安装教程</a></li></ul></li><li>创建一个Github账号<ul><li><a href="https://github.com/">GitHub官网</a></li></ul></li><li>在Github上创建一个用于存放博客文件的仓库</li><li>配置用户信息</li><li>配置免密访问</li><li>配置ssh连接</li></ol><h3 id="二、Node-js安装与配置"><a href="#二、Node-js安装与配置" class="headerlink" title="二、Node.js安装与配置"></a>二、Node.js安装与配置</h3><p>Node.js下载地址：<a href="http://nodejs.cn/download/">下载 | Node.js 中文网 (nodejs.cn)</a></p></li></ul><h2 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h2><ol><li><p>在命令行中通过npm命令安装Hexo</p><figure class="highlight avrasm"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure></li><li><p>创建一个文件文件夹用来存放Hexo博客的相关文件</p></li><li><p>进入到该目录下，在地址栏输入cmd，然后在命令行里输入<code>hexo int</code>指令初始化Hexo</p></li><li><p>此时的博客文件夹下有以下文件<img src="C:/Users/小布菌/AppData/Roaming/Typora/typora-user-images/image-20220216180850292.png" alt="image-20220216180850292"></p></li><li><p>输入<code>hexo g</code>和<code>hexo s</code>进行本地部署</p></li><li><p>部署到Github，首先需要安装部署插件</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-deployer-git</span><br></code></pre></td></tr></table></figure></li></ol><hr><h2 id="Hexo美化"><a href="#Hexo美化" class="headerlink" title="Hexo美化"></a>Hexo美化</h2><p>你可能意识到Hexo的默认主题landscape有些简陋，万幸的是我们能在<a href="https://hexo.io/themes/">Hexo主题官网</a>找到很多风格迥异且漂亮的主题，下面我将向大家介绍如何使用一个新的主题。</p><ol><li>进入Hexo主题官网挑选一个你喜欢的主题，通常作者会把该主题的源码放到Github上托管<img src="/img/article/1/Hexo%E4%B8%BB%E9%A2%98%E5%AE%98%E7%BD%91.png" alt="Hexo主题官网"></li><li>使用git指令<code>git clone ssh码</code>将整个主题克隆到博客的themes目录中</li><li>在<code>_config.yml</code>配置文件中修改主题参数</li><li>输入Hexo指令重新部署上传到Github中</li></ol><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><p>我们可以修改一个主题如导航栏、文章页的几乎所有东西，使它被你看起来更加美观、个性化，下面我们将以Fluid主题为例向大家介绍如何修改</p><p><a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid 用户手册 (fluid-dev.com)</a></p><ol><li>几乎每个主题都会有一个主题文档来讲解该主题的配置和使用，我们的配置必须参考该文档进行</li></ol><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>想必你已经注意到了本教程中有很多令你感到迷惑的Hexo指令，你可以通过<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>去了解它们，官方文档内有权威且实时更新的博客搭建教程，我们应该经常去阅览下官方文档。</p><p>另外感谢零点能同学对本次搭建博客的指导，我常常叫他整活大师，大家可以去他的个人博客踩踩。这是他的个人博客：<a href="zero-pointenergy.net">真空零点</a>。</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>个人博客</tag>
      
      <tag>前端</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
